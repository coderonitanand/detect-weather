{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","console","log","className","Spinner","defaultProps","message","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yLAIMA,G,MAAe,CACjBC,OAAO,CACHC,KAAK,yBACLC,SAAS,OAEbC,OAAO,CACHF,KAAK,gBACLC,SAAS,eA0BFE,EAdO,SAACC,GACrB,IATiBC,EAAKC,EAShBC,GATWF,EASQD,EAAMC,KATTC,GASc,IAAIE,MAAOC,YARnC,GAAKH,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAIC,EAEJP,EAAaS,GAAhCP,EAFuB,EAEvBA,KAAMC,EAFiB,EAEjBA,SAGd,OAFAS,QAAQC,IAAIJ,GAGV,yBAAKK,UAAS,yBAAqBL,IACjC,uBAAGK,UAAS,4BAAuBX,EAAvB,WACZ,4BAAKD,GACL,uBAAGY,UAAS,6BAAwBX,EAAxB,aC9BZY,EAAU,WACZ,OACA,6BACI,yBAAKD,UAAU,oBACb,yBAAKA,UAAU,sBAAf,kDAQVC,EAAQC,aAAc,CAClBC,QAAQ,cAGGF,QCVTG,E,4MACJC,MAAQ,CAAEZ,IAAK,KAAMa,aAAc,I,kEAGd,IAAD,OAClBC,OAAOC,UAAUC,YAAYC,oBAC3B,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAAEnB,IAAKkB,EAASE,OAAOC,cACjD,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAAEN,aAAcS,EAAIZ,e,+BAM3C,OAAIa,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMZ,IAClC,4CAAeuB,KAAKX,MAAMC,eAG9BU,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMZ,IAClC,kBAAC,EAAD,CAAeA,IAAKuB,KAAKX,MAAMZ,MAGjC,kBAAE,EAAF,U,GArBOwB,IAAMC,WAyBxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.034ede10.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./SeasonDisplay.css\";\r\n\r\n//we created a seasonConfig object \r\nconst seasonConfig = {\r\n    summer:{\r\n        text:'Lets hit the Beach !!!',\r\n        iconName:'sun'\r\n    },\r\n    winter:{\r\n        text:'Its Chilly...',\r\n        iconName:'snowflake'   \r\n    }\r\n};\r\n\r\nconst getSeason = (lat, month) => {\r\n  if (month > 2 && month < 9) {\r\n    return lat > 0 ? \"summer\" : \"winter\";\r\n  } else {\r\n    return lat > 0 ? \"winter\" : \"summer\";\r\n  }\r\n};\r\n\r\nconst SeasonDisplay = (props) => {\r\n  const season = getSeason(props.lat, new Date().getMonth());\r\n  const { text, iconName } = seasonConfig[season];\r\n  console.log(season);\r\n\r\n  return (\r\n    <div className={ `season-display ${season}` }> \r\n      <i className={`icon-left massive ${iconName} icon` } />\r\n      <h1>{text}</h1>\r\n      <i className={`icon-right massive ${iconName} icon` } />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeasonDisplay;\r\n","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n    <div>\r\n        <div className=\"ui active dimmer\">\r\n          <div className=\"ui big text loader\">\r\n              Loading...Please accept location request !! \r\n           </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}; \r\n\r\nSpinner.defaultProps ={\r\n    message:'Loading...'\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from './SeasonDisplay.js';\nimport Spinner from \"./Spinner.js\";\n\n\n// Class Component\n\nclass App extends React.Component {\n  state = { lat: null, errorMessage: '' };\n\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      position => this.setState({ lat: position.coords.latitude }),\n      err => this.setState({ errorMessage: err.message })\n    );\n  }\n\n  // React says we have to define render!!  \n  render() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return <div>Error:-->{this.state.errorMessage}</div>\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return <SeasonDisplay lat={this.state.lat} />\n\n    }\n    return < Spinner />;\n      }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}